[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pamod"
version = "0.0.1"
description = "Package for short term periodontal modeling"
authors = [
  { name = "Tobias Brock" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License"
]
requires-python = "~=3.11"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.ruff]
line-length = 88
exclude = [
  ".git",
  "__pycache__",
  ".ruff_cache",
  ".pt",
  "pamod/training/_benchmarking.py",
  "tests/",
]
lint.select = [
  "E",    # pycodestyle errors
  "F",    # pyflakes errors
  "W",    # pycodestyle warnings
  "D",    # pydocstyle errors
  "I",    # import conventions (isort)
  "B",    # flake8-bugbear errors
  "C4",   # flake8-comprehensions errors
  "NPY",  # NumPy style checks
]
lint.ignore = [
  "E203",  # Whitespace before ':', handled by Black
  "E731",  # Do not assign a lambda expression, use a def
  "E741",  # Do not use variables named 'l', 'O', or 'I'
  "E721",  # Use 'isinstance()' instead of comparing types directly
  "F841",  # Local variable assigned to but never used
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["pamod"]
force-sort-within-sections = true

# [tool.docformatter]
# wrap-summaries = 88
# wrap-descriptions = 88
# pre-summary-newline = true
# style = "google"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::DeprecationWarning"
]
